box: node

build:
  steps:
    - npm-install

# Test application using Mocha
test:
  steps:
    - npm-test

# Push to Docker Hub
push:
  steps:
    - internal/docker-push:
      username: $DOCKER_USERNAME
      password: $DOCKER_PASSWORD
      tag: latest
      repository: $DOCKER_USERNAME/nodecities
      ports: "8080"
      working-dir: /pipeline/source
      cmd: node app.js
      registry: https://hub.docker.com
      
deploy-to-k8s:
  box:
        id: alpine
        cmd: /bin/sh
  steps:
    - bash-template
    
    - script:
        name: "Visualise Kubernetes config"
        code: cat kubernetes-namespace.yml

    - kubectl:
        name: create namespace    
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: apply -f $WERCKER_ROOT/kubernetes-namespace.yml
    
    - script:
        name: wait to create namespace
        code: sleep 10
 
#    - kubectl:
#        name: create OCR secret
#        server: $KUBERNETES_MASTER
#        token: $KUBERNETES_TOKEN
#        insecure-skip-tls-verify: true
#        command: create secret docker-registry wrelease --docker-server=wcr.io --docker-username=$WERCKER_APPLICATION_OWNER_NAME --docker-password=$KUBERNETES_TOKEN --docker-email=${WERCKER_APPLICATION_OWNER_NAME}@mail.com --namespace=$WERCKER_APPLICATION_OWNER_NAME; echo 'secret step'
    
    - kubectl:
        name: create deplyoment
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: apply -f $WERCKER_ROOT/kubernetes-deployment.yml --namespace=$WERCKER_APPLICATION_OWNER_NAME

    - script:
        name: "Visualise Ingress config"
        code: cat ingress.yml

    - kubectl:
        name: create Ingress configuration
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: apply -f $WERCKER_ROOT/ingress.yml --namespace=$WERCKER_APPLICATION_OWNER_NAME
        
    - kubectl:
        name: get LoadBalancer public IP address
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: get svc -o jsonpath='{.items[*].status.loadBalancer.ingress[*].ip}' --all-namespaces